[{"/Users/macbook/Desktop/Area/tasktracker/src/index.js":"1","/Users/macbook/Desktop/Area/tasktracker/src/App.js":"2","/Users/macbook/Desktop/Area/tasktracker/src/reportWebVitals.js":"3","/Users/macbook/Desktop/Area/tasktracker/src/components/Tasks.js":"4","/Users/macbook/Desktop/Area/tasktracker/src/components/Header.js":"5","/Users/macbook/Desktop/Area/tasktracker/src/components/AddTask.js":"6","/Users/macbook/Desktop/Area/tasktracker/src/components/Task.js":"7","/Users/macbook/Desktop/Area/tasktracker/src/components/Button.js":"8"},{"size":500,"mtime":1643416187169,"results":"9","hashOfConfig":"10"},{"size":1896,"mtime":1643755360220,"results":"11","hashOfConfig":"10"},{"size":362,"mtime":1643416187170,"results":"12","hashOfConfig":"10"},{"size":259,"mtime":1643506222342,"results":"13","hashOfConfig":"10"},{"size":628,"mtime":1643502684780,"results":"14","hashOfConfig":"10"},{"size":1347,"mtime":1643481746648,"results":"15","hashOfConfig":"10"},{"size":669,"mtime":1643506801122,"results":"16","hashOfConfig":"10"},{"size":409,"mtime":1643419965944,"results":"17","hashOfConfig":"10"},{"filePath":"18","messages":"19","suppressedMessages":"20","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"1u7em6x",{"filePath":"21","messages":"22","suppressedMessages":"23","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"24"},{"filePath":"25","messages":"26","suppressedMessages":"27","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"28","messages":"29","suppressedMessages":"30","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"31","messages":"32","suppressedMessages":"33","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"34","messages":"35","suppressedMessages":"36","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"37","messages":"38","suppressedMessages":"39","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"40","messages":"41","suppressedMessages":"42","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/Users/macbook/Desktop/Area/tasktracker/src/index.js",[],[],"/Users/macbook/Desktop/Area/tasktracker/src/App.js",["43","44"],[],"import Header from \"./components/Header\";\nimport Tasks from \"./components/Tasks\";\nimport {useState , useEffect} from 'react';\nimport AddTask from \"./components/AddTask\";\n\nfunction App() {\n  const [showAddTask, setShowAddTask] = useState(false);\n\n\n  const [tasks, setTasks] = useState([])\n\n\n\n// fetch tasks from local storage\nuseEffect(() => {\n  const getTasks = async () => {\n    const tasksFromServer = await fetchTasks()\n    setTasks(tasksFromServer)\n  }\n\n  getTasks()\n}, [])\n\n// Fetch Tasks\nconst fetchTasks = async () => {\n  const res = await fetch('http://localhost:3000/tasks')\n  const data = await res.json()\n\n  return data\n}\n\n\n\nconst addTask = (task,text, date,completed,reminder) => {\n  const id = Math.floor(Math.random() * 10000) + 1\n    const newTask = { id, ...task }\n    setTasks([...tasks, newTask])\n}\n\n\nconst deleteTask = async (id) => {\n  const res = await fetch(`http://localhost:3000/tasks/${id}`, {\n    method: 'DELETE',\n\n  })\n  setTasks(tasks.filter(task => task.id !== id))\n\n}\n\nconst toggleReminder = (id) => {\n  setTasks(tasks.map(task => {\n    if(task.id === id) {\n      return {\n        ...task,\n        reminder: !task.reminder\n      }   \n    } else {\n    return task;}\n  }))\n  console.log('toggleReminder')\n}\n  \nconst toggleCompleted = (id) => {\n  setTasks(tasks.map(task => {\n    if(task.id === id) {\n      return {\n        ...task,\n        completed: !task.completed\n      }\n    } else {\n    return task;}\n  }))\n\n  console.log('toggleCompleted')\n}\n\n\n\n  const name = 'React';\n  return (\n    <div className=\"container\">\n<Header onAdd={() => setShowAddTask(!showAddTask)} showAdd={showAddTask}/>\n{showAddTask && <AddTask onAdd={addTask}/>}\n{tasks.length > 0 ?\n<Tasks \n   tasks={tasks}\n    onAdd={addTask}\n     onDelete={deleteTask}\n      onToggle={toggleReminder}\n       onComplete ={toggleCompleted} /> :\n        <p>No tasks</p>}\n    </div>\n  );\n}\n\nexport default App;\n","/Users/macbook/Desktop/Area/tasktracker/src/reportWebVitals.js",[],[],"/Users/macbook/Desktop/Area/tasktracker/src/components/Tasks.js",[],[],"/Users/macbook/Desktop/Area/tasktracker/src/components/Header.js",[],[],"/Users/macbook/Desktop/Area/tasktracker/src/components/AddTask.js",[],[],"/Users/macbook/Desktop/Area/tasktracker/src/components/Task.js",["45"],[],"/Users/macbook/Desktop/Area/tasktracker/src/components/Button.js",[],[],{"ruleId":"46","severity":1,"message":"47","line":42,"column":9,"nodeType":"48","messageId":"49","endLine":42,"endColumn":12},{"ruleId":"46","severity":1,"message":"50","line":79,"column":9,"nodeType":"48","messageId":"49","endLine":79,"endColumn":13},{"ruleId":"51","severity":1,"message":"52","line":14,"column":1,"nodeType":"53","messageId":"54","endLine":14,"endColumn":150},"no-unused-vars","'res' is assigned a value but never used.","Identifier","unusedVar","'name' is assigned a value but never used.","no-lone-blocks","Block is redundant.","BlockStatement","redundantBlock"]