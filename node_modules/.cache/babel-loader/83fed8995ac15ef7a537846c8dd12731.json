{"ast":null,"code":"import _toConsumableArray from\"/Users/macbook/Desktop/Area/react-task-tracker/node_modules/@babel/runtime/helpers/esm/toConsumableArray.js\";import _objectSpread from\"/Users/macbook/Desktop/Area/react-task-tracker/node_modules/@babel/runtime/helpers/esm/objectSpread2.js\";import _slicedToArray from\"/Users/macbook/Desktop/Area/react-task-tracker/node_modules/@babel/runtime/helpers/esm/slicedToArray.js\";import Header from\"./components/Header\";import Tasks from\"./components/Tasks\";import{useState}from'react';import AddTask from\"./components/AddTask\";import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";function App(){var _useState=useState(false),_useState2=_slicedToArray(_useState,2),showAddTask=_useState2[0],setShowAddTask=_useState2[1];var _useState3=useState([{id:1,text:\"Learn React\",completed:true,reminder:false,date:\"2020-01-01\"},{id:2,text:\"Learn Redux\",completed:false,reminder:false,date:\"2020-01-01\"},{id:3,text:\"Learn React Native\",completed:false,reminder:false,date:\"2020-01-01\"}]),_useState4=_slicedToArray(_useState3,2),tasks=_useState4[0],setTasks=_useState4[1];var addTask=function addTask(task,text,date,completed,reminder){var id=Math.floor(Math.random()*10000)+1;var newTask=_objectSpread({id:id},task);setTasks([].concat(_toConsumableArray(tasks),[newTask]));};var deleteTask=function deleteTask(id){setTasks(tasks.filter(function(task){return task.id!==id;}));};var toggleReminder=function toggleReminder(id){setTasks(tasks.map(function(task){if(task.id===id){return _objectSpread(_objectSpread({},task),{},{reminder:!task.reminder});}else{return task;}}));console.log('toggleReminder');};var toggleCompleted=function toggleCompleted(id){setTasks(tasks.map(function(task){if(task.id===id){return _objectSpread(_objectSpread({},task),{},{completed:!task.completed});}else{return task;}}));console.log('toggleCompleted');};var name='React';return/*#__PURE__*/_jsxs(\"div\",{className:\"container\",children:[/*#__PURE__*/_jsx(Header,{onAdd:function onAdd(){return setShowAddTask(!showAddTask);},showAdd:showAddTask}),showAddTask&&/*#__PURE__*/_jsx(AddTask,{onAdd:addTask}),tasks.length>0?/*#__PURE__*/_jsx(Tasks,{tasks:tasks,onAdd:addTask,onDelete:deleteTask,onToggle:toggleReminder,onComplete:toggleCompleted}):/*#__PURE__*/_jsx(\"p\",{children:\"No tasks\"})]});}export default App;","map":{"version":3,"sources":["/Users/macbook/Desktop/Area/react-task-tracker/src/App.js"],"names":["Header","Tasks","useState","AddTask","App","showAddTask","setShowAddTask","id","text","completed","reminder","date","tasks","setTasks","addTask","task","Math","floor","random","newTask","deleteTask","filter","toggleReminder","map","console","log","toggleCompleted","name","length"],"mappings":"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","sourcesContent":["import Header from \"./components/Header\";\nimport Tasks from \"./components/Tasks\";\nimport {useState} from 'react';\nimport AddTask from \"./components/AddTask\";\n\nfunction App() {\n  const [showAddTask, setShowAddTask] = useState(false);\n\n\n  const [tasks, setTasks] = useState([\n    {   id: 1,      \n        text: \"Learn React\",\n        completed: true,\n        reminder: false,\n        date: \"2020-01-01\"\n    },  \n    {   id: 2,\n        text: \"Learn Redux\",\n        completed: false,\n        reminder: false,\n        date: \"2020-01-01\"\n    },\n    {   id: 3,\n        text: \"Learn React Native\",\n\n        completed: false,\n        reminder: false,\n        date: \"2020-01-01\"\n\n\n    }\n])\n\nconst addTask = (task,text, date,completed,reminder) => {\n  const id = Math.floor(Math.random() * 10000) + 1\n    const newTask = { id, ...task }\n    setTasks([...tasks, newTask])\n}\n\n\nconst deleteTask = (id) => {\n  setTasks(tasks.filter(task => task.id !== id))\n}\n\nconst toggleReminder = (id) => {\n  setTasks(tasks.map(task => {\n    if(task.id === id) {\n      return {\n        ...task,\n        reminder: !task.reminder\n      }   \n    } else {\n    return task;}\n  }))\n  console.log('toggleReminder')\n}\n  \nconst toggleCompleted = (id) => {\n  setTasks(tasks.map(task => {\n    if(task.id === id) {\n      return {\n        ...task,\n        completed: !task.completed\n      }\n    } else {\n    return task;}\n  }))\n\n  console.log('toggleCompleted')\n}\n\n\n\n  const name = 'React';\n  return (\n    <div className=\"container\">\n<Header onAdd={() => setShowAddTask(!showAddTask)} showAdd={showAddTask}/>\n{showAddTask && <AddTask onAdd={addTask}/>}\n{tasks.length > 0 ?<Tasks tasks={tasks} onAdd={addTask} onDelete={deleteTask} onToggle={toggleReminder} onComplete ={toggleCompleted} /> : <p>No tasks</p>}\n    </div>\n  );\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}