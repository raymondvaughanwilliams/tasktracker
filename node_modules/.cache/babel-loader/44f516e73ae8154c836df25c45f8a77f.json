{"ast":null,"code":"var _jsxFileName = \"/Users/macbook/Desktop/Area/react-task-tracker/src/App.js\",\n    _s = $RefreshSig$();\n\nimport Header from \"./components/Header\";\nimport Tasks from \"./components/Tasks\";\nimport { useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction App() {\n  _s();\n\n  const [tasks, setTasks] = useState([{\n    id: 1,\n    text: \"Learn React\",\n    completed: false,\n    reminder: false,\n    date: \"2020-01-01\"\n  }, {\n    id: 2,\n    text: \"Learn Redux\",\n    completed: false,\n    reminder: false,\n    date: \"2020-01-01\"\n  }, {\n    id: 3,\n    text: \"Learn React Native\",\n    completed: false,\n    reminder: false,\n    date: \"2020-01-01\"\n  }]);\n\n  const deleteTask = id => {\n    setTasks(tasks.filter(task => task.id !== id));\n  };\n\n  const toggleReminder = id => {\n    setTasks(tasks.map(task => {\n      if (task.id === id) {\n        return { ...task,\n          reminder: !task.reminder\n        };\n      } else {\n        return task;\n      }\n    }));\n    console.log('toggleReminder');\n  };\n\n  const toggleCompleted = id => {\n    setTasks(tasks.map(task => {\n      if (task.id === id) {\n        return { ...task,\n          completed: !task.completed\n        };\n      } else {\n        return task;\n      }\n    }));\n    console.log('toggleCompleted');\n  };\n\n  const name = 'React';\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"container\",\n    children: [/*#__PURE__*/_jsxDEV(Header, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 1\n    }, this), tasks.length > 0 ? /*#__PURE__*/_jsxDEV(Tasks, {\n      tasks: tasks,\n      onDelete: deleteTask,\n      onToggle: toggleReminder\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 20\n    }, this) : /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"No tasks\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 94\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 65,\n    columnNumber: 5\n  }, this);\n}\n\n_s(App, \"2rhbeXnrOfEPMLmWXCv6Xuj4nH8=\");\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["/Users/macbook/Desktop/Area/react-task-tracker/src/App.js"],"names":["Header","Tasks","useState","App","tasks","setTasks","id","text","completed","reminder","date","deleteTask","filter","task","toggleReminder","map","console","log","toggleCompleted","name","length"],"mappings":";;;AAAA,OAAOA,MAAP,MAAmB,qBAAnB;AACA,OAAOC,KAAP,MAAkB,oBAAlB;AACA,SAAQC,QAAR,QAAuB,OAAvB;;;AAEA,SAASC,GAAT,GAAe;AAAA;;AACb,QAAM,CAACC,KAAD,EAAQC,QAAR,IAAoBH,QAAQ,CAAC,CACjC;AAAII,IAAAA,EAAE,EAAE,CAAR;AACIC,IAAAA,IAAI,EAAE,aADV;AAEIC,IAAAA,SAAS,EAAE,KAFf;AAGIC,IAAAA,QAAQ,EAAE,KAHd;AAIIC,IAAAA,IAAI,EAAE;AAJV,GADiC,EAOjC;AAAIJ,IAAAA,EAAE,EAAE,CAAR;AACIC,IAAAA,IAAI,EAAE,aADV;AAEIC,IAAAA,SAAS,EAAE,KAFf;AAGIC,IAAAA,QAAQ,EAAE,KAHd;AAIIC,IAAAA,IAAI,EAAE;AAJV,GAPiC,EAajC;AAAIJ,IAAAA,EAAE,EAAE,CAAR;AACIC,IAAAA,IAAI,EAAE,oBADV;AAGIC,IAAAA,SAAS,EAAE,KAHf;AAIIC,IAAAA,QAAQ,EAAE,KAJd;AAKIC,IAAAA,IAAI,EAAE;AALV,GAbiC,CAAD,CAAlC;;AAwBF,QAAMC,UAAU,GAAIL,EAAD,IAAQ;AACzBD,IAAAA,QAAQ,CAACD,KAAK,CAACQ,MAAN,CAAaC,IAAI,IAAIA,IAAI,CAACP,EAAL,KAAYA,EAAjC,CAAD,CAAR;AACD,GAFD;;AAIA,QAAMQ,cAAc,GAAIR,EAAD,IAAQ;AAC7BD,IAAAA,QAAQ,CAACD,KAAK,CAACW,GAAN,CAAUF,IAAI,IAAI;AACzB,UAAGA,IAAI,CAACP,EAAL,KAAYA,EAAf,EAAmB;AACjB,eAAO,EACL,GAAGO,IADE;AAELJ,UAAAA,QAAQ,EAAE,CAACI,IAAI,CAACJ;AAFX,SAAP;AAID,OALD,MAKO;AACP,eAAOI,IAAP;AAAa;AACd,KARQ,CAAD,CAAR;AASAG,IAAAA,OAAO,CAACC,GAAR,CAAY,gBAAZ;AACD,GAXD;;AAaA,QAAMC,eAAe,GAAIZ,EAAD,IAAQ;AAC9BD,IAAAA,QAAQ,CAACD,KAAK,CAACW,GAAN,CAAUF,IAAI,IAAI;AACzB,UAAGA,IAAI,CAACP,EAAL,KAAYA,EAAf,EAAmB;AACjB,eAAO,EACL,GAAGO,IADE;AAELL,UAAAA,SAAS,EAAE,CAACK,IAAI,CAACL;AAFZ,SAAP;AAID,OALD,MAKO;AACP,eAAOK,IAAP;AAAa;AACd,KARQ,CAAD,CAAR;AAUAG,IAAAA,OAAO,CAACC,GAAR,CAAY,iBAAZ;AACD,GAZD;;AAgBE,QAAME,IAAI,GAAG,OAAb;AACA,sBACE;AAAK,IAAA,SAAS,EAAC,WAAf;AAAA,4BACJ,QAAC,MAAD;AAAA;AAAA;AAAA;AAAA,YADI,EAEHf,KAAK,CAACgB,MAAN,GAAe,CAAf,gBAAkB,QAAC,KAAD;AAAO,MAAA,KAAK,EAAEhB,KAAd;AAAqB,MAAA,QAAQ,EAAEO,UAA/B;AAA2C,MAAA,QAAQ,EAAEG;AAArD;AAAA;AAAA;AAAA;AAAA,YAAlB,gBAA4F;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAFzF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAMD;;GAjEQX,G;;KAAAA,G;AAmET,eAAeA,GAAf","sourcesContent":["import Header from \"./components/Header\";\nimport Tasks from \"./components/Tasks\";\nimport {useState} from 'react';\n\nfunction App() {\n  const [tasks, setTasks] = useState([\n    {   id: 1,      \n        text: \"Learn React\",\n        completed: false,\n        reminder: false,\n        date: \"2020-01-01\"\n    },  \n    {   id: 2,\n        text: \"Learn Redux\",\n        completed: false,\n        reminder: false,\n        date: \"2020-01-01\"\n    },\n    {   id: 3,\n        text: \"Learn React Native\",\n\n        completed: false,\n        reminder: false,\n        date: \"2020-01-01\"\n\n\n    }\n])\n\nconst deleteTask = (id) => {\n  setTasks(tasks.filter(task => task.id !== id))\n}\n\nconst toggleReminder = (id) => {\n  setTasks(tasks.map(task => {\n    if(task.id === id) {\n      return {\n        ...task,\n        reminder: !task.reminder\n      }   \n    } else {\n    return task;}\n  }))\n  console.log('toggleReminder')\n}\n  \nconst toggleCompleted = (id) => {\n  setTasks(tasks.map(task => {\n    if(task.id === id) {\n      return {\n        ...task,\n        completed: !task.completed\n      }\n    } else {\n    return task;}\n  }))\n\n  console.log('toggleCompleted')\n}\n\n\n\n  const name = 'React';\n  return (\n    <div className=\"container\">\n<Header/>\n{tasks.length > 0 ?<Tasks tasks={tasks} onDelete={deleteTask} onToggle={toggleReminder} /> : <p>No tasks</p>}\n    </div>\n  );\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}