{"ast":null,"code":"var _jsxFileName = \"/Users/macbook/Desktop/Area/react-task-tracker/src/components/Tasks.js\",\n    _s = $RefreshSig$();\n\nimport { useState } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst Tasks = props => {\n  _s();\n\n  const [tasks, setTasks] = useState([{\n    id: 1,\n    text: \"Learn React\",\n    completed: false\n  }, {\n    id: 2,\n    text: \"Learn Redux\",\n    completed: false\n  }, {\n    id: 3,\n    text: \"Learn React Native\",\n    completed: false\n  }]);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: tasks.map(task => /*#__PURE__*/_jsxDEV(\"h3\", {\n      children: task.text\n    }, task.id, false, {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 11\n    }, this))\n  }, void 0, false);\n};\n\n_s(Tasks, \"x/bxOP9TQBpK/zt9uqSJVmWjO7o=\");\n\n_c = Tasks;\nexport default Tasks;\n\nvar _c;\n\n$RefreshReg$(_c, \"Tasks\");","map":{"version":3,"sources":["/Users/macbook/Desktop/Area/react-task-tracker/src/components/Tasks.js"],"names":["useState","Tasks","props","tasks","setTasks","id","text","completed","map","task"],"mappings":";;;AAAA,SAASA,QAAT,QAAyB,OAAzB;;;;AAGA,MAAMC,KAAK,GAAIC,KAAD,IAAW;AAAA;;AACrB,QAAM,CAACC,KAAD,EAAQC,QAAR,IAAoBJ,QAAQ,CAAC,CAC/B;AAAIK,IAAAA,EAAE,EAAE,CAAR;AACIC,IAAAA,IAAI,EAAE,aADV;AAEIC,IAAAA,SAAS,EAAE;AAFf,GAD+B,EAK/B;AAAIF,IAAAA,EAAE,EAAE,CAAR;AACIC,IAAAA,IAAI,EAAE,aADV;AAEIC,IAAAA,SAAS,EAAE;AAFf,GAL+B,EAS/B;AAAIF,IAAAA,EAAE,EAAE,CAAR;AACIC,IAAAA,IAAI,EAAE,oBADV;AAGIC,IAAAA,SAAS,EAAE;AAHf,GAT+B,CAAD,CAAlC;AAiBF,sBACE;AAAA,cACGJ,KAAK,CAACK,GAAN,CAAWC,IAAD,iBACP;AAAA,gBAAmBA,IAAI,CAACH;AAAxB,OAASG,IAAI,CAACJ,EAAd;AAAA;AAAA;AAAA;AAAA,YADH;AADH,mBADF;AAOD,CAzBD;;GAAMJ,K;;KAAAA,K;AA2BN,eAAeA,KAAf","sourcesContent":["import { useState } from \"react\"\n\n\nconst Tasks = (props) => {\n    const [tasks, setTasks] = useState([\n        {   id: 1,      \n            text: \"Learn React\",\n            completed: false\n        },  \n        {   id: 2,\n            text: \"Learn Redux\",\n            completed: false\n        },\n        {   id: 3,\n            text: \"Learn React Native\",\n\n            completed: false\n        }\n    ])\n\n\n  return (\n    <>\n      {tasks.map((task) => (\n          <h3 key={task.id}>{task.text}</h3>\n        ))}\n    </>\n  )\n}\n\nexport default Tasks\n"]},"metadata":{},"sourceType":"module"}