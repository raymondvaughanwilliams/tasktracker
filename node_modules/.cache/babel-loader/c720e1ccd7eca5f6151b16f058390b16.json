{"ast":null,"code":"var _jsxFileName = \"/Users/macbook/Desktop/Area/tasktracker/src/App.js\",\n    _s = $RefreshSig$();\n\nimport Header from \"./components/Header\";\nimport Tasks from \"./components/Tasks\";\nimport { useState, useEffect } from 'react';\nimport AddTask from \"./components/AddTask\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction App() {\n  _s();\n\n  const [showAddTask, setShowAddTask] = useState(false);\n  const [tasks, setTasks] = useState([]); // fetch tasks from local storage\n\n  useEffect(() => {\n    const getTasks = async () => {\n      const tasksFromServer = await fetchTasks();\n      setTasks(tasksFromServer);\n    };\n\n    getTasks();\n  }, []); // Fetch Tasks\n\n  const fetchTasks = async () => {\n    const res = await fetch('http://localhost:3001/tasks');\n    const data = await res.json();\n    return data;\n  }; // Add Task\n\n\n  const addTask = async task => {\n    const res = await fetch('http://localhost:5000/tasks', {\n      method: 'POST',\n      headers: {\n        'Content-type': 'application/json'\n      },\n      body: JSON.stringify(task)\n    });\n    const data = await res.json();\n    setTasks([...tasks, data]); // const id = Math.floor(Math.random() * 10000) + 1\n    // const newTask = { id, ...task }\n    // setTasks([...tasks, newTask])\n  };\n\n  const deleteTask = async id => {\n    const res = await fetch(`http://localhost:3001/tasks/${id}`, {\n      method: 'DELETE'\n    });\n    setTasks(tasks.filter(task => task.id !== id));\n  };\n\n  const toggleReminder = id => {\n    setTasks(tasks.map(task => {\n      if (task.id === id) {\n        return { ...task,\n          reminder: !task.reminder\n        };\n      } else {\n        return task;\n      }\n    }));\n    console.log('toggleReminder');\n  };\n\n  const toggleCompleted = id => {\n    setTasks(tasks.map(task => {\n      if (task.id === id) {\n        return { ...task,\n          completed: !task.completed\n        };\n      } else {\n        return task;\n      }\n    }));\n    console.log('toggleCompleted');\n  };\n\n  const name = 'React';\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"container\",\n    children: [/*#__PURE__*/_jsxDEV(Header, {\n      onAdd: () => setShowAddTask(!showAddTask),\n      showAdd: showAddTask\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 95,\n      columnNumber: 1\n    }, this), showAddTask && /*#__PURE__*/_jsxDEV(AddTask, {\n      onAdd: addTask\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 96,\n      columnNumber: 17\n    }, this), tasks.length > 0 ? /*#__PURE__*/_jsxDEV(Tasks, {\n      tasks: tasks,\n      onDelete: deleteTask,\n      onToggle: toggleReminder,\n      onComplete: toggleCompleted\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 98,\n      columnNumber: 1\n    }, this) : /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"No tasks\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 103,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 94,\n    columnNumber: 5\n  }, this);\n}\n\n_s(App, \"pA4snfDjny2P+O1a+6NjXQ6HzBU=\");\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["/Users/macbook/Desktop/Area/tasktracker/src/App.js"],"names":["Header","Tasks","useState","useEffect","AddTask","App","showAddTask","setShowAddTask","tasks","setTasks","getTasks","tasksFromServer","fetchTasks","res","fetch","data","json","addTask","task","method","headers","body","JSON","stringify","deleteTask","id","filter","toggleReminder","map","reminder","console","log","toggleCompleted","completed","name","length"],"mappings":"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","sourcesContent":["import Header from \"./components/Header\";\nimport Tasks from \"./components/Tasks\";\nimport {useState , useEffect} from 'react';\nimport AddTask from \"./components/AddTask\";\n\nfunction App() {\n  const [showAddTask, setShowAddTask] = useState(false);\n\n\n  const [tasks, setTasks] = useState([])\n\n\n\n// fetch tasks from local storage\nuseEffect(() => {\n  const getTasks = async () => {\n    const tasksFromServer = await fetchTasks()\n    setTasks(tasksFromServer)\n  }\n\n  getTasks()\n}, [])\n\n// Fetch Tasks\nconst fetchTasks = async () => {\n  const res = await fetch('http://localhost:3001/tasks')\n  const data = await res.json()\n\n  return data\n}\n\n\n\n // Add Task\n const addTask = async (task) => {\n  const res = await fetch('http://localhost:5000/tasks', {\n    method: 'POST',\n    headers: {\n      'Content-type': 'application/json',\n    },\n    body: JSON.stringify(task),\n  })\n\n  const data = await res.json()\n\n  setTasks([...tasks, data])\n\n  // const id = Math.floor(Math.random() * 10000) + 1\n  // const newTask = { id, ...task }\n  // setTasks([...tasks, newTask])\n}\n\n\nconst deleteTask = async (id) => {\n  const res = await fetch(`http://localhost:3001/tasks/${id}`, {\n    method: 'DELETE',\n\n  })\n  setTasks(tasks.filter(task => task.id !== id))\n\n}\n\nconst toggleReminder = (id) => {\n  setTasks(tasks.map(task => {\n    if(task.id === id) {\n      return {\n        ...task,\n        reminder: !task.reminder\n      }   \n    } else {\n    return task;}\n  }))\n  console.log('toggleReminder')\n}\n  \nconst toggleCompleted = (id) => {\n  setTasks(tasks.map(task => {\n    if(task.id === id) {\n      return {\n        ...task,\n        completed: !task.completed\n      }\n    } else {\n    return task;}\n  }))\n\n  console.log('toggleCompleted')\n}\n\n\n\n  const name = 'React';\n  return (\n    <div className=\"container\">\n<Header onAdd={() => setShowAddTask(!showAddTask)} showAdd={showAddTask}/>\n{showAddTask && <AddTask onAdd={addTask}/>}\n{tasks.length > 0 ?\n<Tasks \n   tasks={tasks}\n     onDelete={deleteTask}\n      onToggle={toggleReminder}\n       onComplete ={toggleCompleted} /> :\n        <p>No tasks</p>}\n    </div>\n  );\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}